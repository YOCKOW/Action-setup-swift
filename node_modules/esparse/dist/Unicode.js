'use strict';

let _UnicodeData = require('./UnicodeData.js');
exports.isIdentifierStart = isIdentifierStart;
exports.isIdentifierPart = isIdentifierPart;
exports.isWhitespace = isWhitespace;
exports.codePointLength = codePointLength;
exports.codePointAt = codePointAt;
exports.codePointString = codePointString;

function binarySearch(table, val) {
  let right = (table.length / 3) - 1;
  let left = 0;
  let mid = 0;
  let test = 0;
  let offset = 0;
  while (left <= right) {
    mid = (left + right) >> 1;
    offset = mid * 3;
    test = table[offset];
    if (val < test) {
      right = mid - 1;
    } else if (val === test || val <= test + table[offset + 1]) {
      return table[offset + 2];
    } else {
      left = mid + 1;
    }
  }
  return 0;
}

function isIdentifierStart(code) {
  return binarySearch(_UnicodeData.IDENTIFIER, code) === 2;
}

function isIdentifierPart(code) {
  return binarySearch(_UnicodeData.IDENTIFIER, code) >= 2;
}

function isWhitespace(code) {
  return binarySearch(_UnicodeData.WHITESPACE, code) === 1;
}

function codePointLength(code) {
  return code > 65535 ? 2 : 1;
}

function codePointAt(str, offset) {
  let a = str.charCodeAt(offset);
  if (a >= 55296 && a <= 56319 && str.length > offset + 1) {
    let b = str.charCodeAt(offset + 1);
    if (b >= 56320 && b <= 57343) return (a - 55296) * 1024 + b - 56320 + 65536;
  }
  return a;
}

function codePointString(code) {
  if (code > 1114111) return '';
  if (code <= 65535) return String.fromCharCode(code);
  code -= 65536;
  return String.fromCharCode((code >> 10) + 55296, (code % 1024) + 56320);
}